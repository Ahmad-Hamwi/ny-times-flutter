// Mocks generated by Mockito 5.4.2 from annotations
// in ny_times_flutter/test/mocks/domain/domain_mocks_registry.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ny_times_flutter/domain/entity/article_entity.dart'
    as _i6;
import 'package:ny_times_flutter/domain/entity/section_entity.dart'
    as _i4;
import 'package:ny_times_flutter/domain/interactor/get_articles_use_case.dart'
    as _i5;
import 'package:ny_times_flutter/domain/interactor/get_filters_use_case.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetSectionsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSectionsUseCase extends _i1.Mock
    implements _i2.GetSectionsUseCase {
  @override
  _i3.Future<List<_i4.SectionEntity>> execute([dynamic params]) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i3.Future<List<_i4.SectionEntity>>.value(<_i4.SectionEntity>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.SectionEntity>>.value(<_i4.SectionEntity>[]),
      ) as _i3.Future<List<_i4.SectionEntity>>);
}

/// A class which mocks [GetArticlesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetArticlesUseCase extends _i1.Mock
    implements _i5.GetArticlesUseCase {
  @override
  _i3.Future<List<_i6.ArticleEntity>> execute(
          [_i5.GetArticlesParams? params]) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i3.Future<List<_i6.ArticleEntity>>.value(<_i6.ArticleEntity>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i6.ArticleEntity>>.value(<_i6.ArticleEntity>[]),
      ) as _i3.Future<List<_i6.ArticleEntity>>);
}
